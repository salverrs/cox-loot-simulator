{"version":3,"file":"js/app.b1b8177a.js","mappings":"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","sources":["webpack://cox-loot-simulator/./src/App.vue","webpack://cox-loot-simulator/./src/LootSimulator.js","webpack://cox-loot-simulator/./src/App.vue?7ccd","webpack://cox-loot-simulator/./src/main.js","webpack://cox-loot-simulator/webpack/bootstrap","webpack://cox-loot-simulator/webpack/runtime/chunk loaded","webpack://cox-loot-simulator/webpack/runtime/compat get default export","webpack://cox-loot-simulator/webpack/runtime/define property getters","webpack://cox-loot-simulator/webpack/runtime/global","webpack://cox-loot-simulator/webpack/runtime/hasOwnProperty shorthand","webpack://cox-loot-simulator/webpack/runtime/jsonp chunk loading","webpack://cox-loot-simulator/webpack/startup"],"sourcesContent":["<!-- eslint-disable vue/no-unused-vars -->\n<template>\n  <div class=\"app-wrapper\">\n    <span id=\"tooltip\" class=\"custom-tooltip\"></span>\n\n    <a\n      class=\"switch-simulator\"\n      href=\"https://salverrs.github.io/toa-loot-simulator/\"\n    >\n      <span>ToA</span>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        height=\"16px\"\n        viewBox=\"0 -960 960 960\"\n        width=\"16px\"\n        fill=\"#e8eaed\"\n      >\n        <path d=\"M504-480 320-664l56-56 240 240-240 240-56-56 184-184Z\" />\n      </svg>\n    </a>\n\n    <header>\n      <h1>Chambers of Xeric Loot Simulator</h1>\n    </header>\n\n    <div class=\"main-container\">\n      <!-- Parameters Input Section -->\n      <div class=\"parameters\">\n        <div class=\"parameter-controls\">\n          <label\n            >Personal Points:\n            <input\n              type=\"number\"\n              v-model.number=\"personalPoints\"\n              min=\"0\"\n              max=\"9999999\"\n              style=\"max-width: 8rem\"\n            />\n          </label>\n\n          <label\n            >Challenge Mode:\n            <select v-model=\"challengeMode\">\n              <option value=\"disabled\">Disabled</option>\n              <option value=\"enabled\">Enabled</option>\n            </select>\n          </label>\n\n          <label>\n            <span\n              class=\"dynamic-tooltip underlined\"\n              data-tooltip-content=\"Max point variance (%) range\"\n              >PV (%):</span\n            >\n            <input\n              type=\"number\"\n              v-model.number=\"variance\"\n              min=\"0\"\n              max=\"200\"\n              style=\"max-width: 80px\"\n            />\n          </label>\n\n          <label\n            >Rolls:\n            <input\n              type=\"number\"\n              v-model.number=\"numberOfRolls\"\n              min=\"1\"\n              max=\"10000\"\n              style=\"max-width: 80px\"\n            />\n          </label>\n        </div>\n\n        <div class=\"parameter-controls\">\n          <label\n            >Auto Roll Interval (ms):\n            <input\n              type=\"number\"\n              v-model.number=\"autoRollInterval\"\n              min=\"1\"\n              max=\"3600000\"\n              style=\"max-width: 100px\"\n            />\n          </label>\n          <label\n            >Auto Roll Stop:\n            <select v-model=\"autoRollStopCondition\">\n              <option value=\"never\">Never</option>\n              <option value=\"purple\">Purple</option>\n              <option value=\"pet\">Pet</option>\n              <option value=\"newCollectionLog\">New Collection Log</option>\n              <option value=\"allUniques\">All Purples</option>\n              <option value=\"log\">Green Logged</option>\n              <option value=\"chooseItemsAny\">Choose Items (Any)</option>\n              <option value=\"chooseItemsAll\">Choose Items (All)</option>\n            </select>\n          </label>\n\n          <!-- Checkboxes for Choose Items -->\n          <div\n            v-if=\"\n              autoRollStopCondition === 'chooseItemsAny' ||\n              autoRollStopCondition === 'chooseItemsAll'\n            \"\n            class=\"choose-items-container\"\n          >\n            <div class=\"checkboxes\">\n              <div\n                v-for=\"item in allCollLogItemsList\"\n                :key=\"item\"\n                class=\"checkbox-item\"\n              >\n                <label :class=\"{ 'greyed-out': collectionLog[item] }\">\n                  <input\n                    type=\"checkbox\"\n                    :value=\"item\"\n                    v-model=\"selectedItems\"\n                  />\n                  {{ item }}\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Expected Purple Rate Display -->\n        <div class=\"expected-purple-rate\">\n          Estimated Purple Rate:&nbsp;\n          <span v-if=\"variance > 0\">\n            {{\n              formatPurpleRate(expectedPurpleRange.min, expectedPurpleRange.max)\n            }}\n          </span>\n          <span v-else>{{ expectedPurpleRange.max.toFixed(2) }}% </span>\n        </div>\n\n        <div class=\"parameter-generation\">\n          <!-- Roll and Reset Buttons -->\n          <button @click=\"simulateLoot\">Roll</button>\n\n          <!-- Start/Stop Auto Roll Button -->\n          <button\n            @click=\"autoRolling ? stopAutoRoll() : startAutoRoll()\"\n            :disabled=\"!canStartAutoRoll && !autoRolling\"\n            :class=\"{\n              'stop-button': autoRolling,\n              'disabled-button': !canStartAutoRoll && !autoRolling,\n            }\"\n          >\n            {{ autoRolling ? \"Stop Auto Roll\" : \"Start Auto Roll\" }}\n          </button>\n\n          <button @click=\"resetLoot\" style=\"background-color: #d1ba26\">\n            Reset\n          </button>\n        </div>\n      </div>\n\n      <span class=\"dynamic-tooltip\" data-tooltip-content=\"Toggle Info\">\n        <!-- Toggle Button for Extra Info -->\n        <button\n          @click=\"toggleExtraInfo\"\n          class=\"toggle-extra-info\"\n          aria-label=\"Toggle Info\"\n        >\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"16\"\n            height=\"16\"\n            fill=\"currentColor\"\n            class=\"bi bi-info-lg\"\n            viewBox=\"0 0 16 16\"\n          >\n            <path\n              d=\"m9.708 6.075-3.024.379-.108.502.595.108c.387.093.464.232.38.619l-.975 4.577c-.255 1.183.14 1.74 1.067 1.74.72 0 1.554-.332 1.933-.789l.116-.549c-.263.232-.65.325-.905.325-.363 0-.494-.255-.402-.704zm.091-2.755a1.32 1.32 0 1 1-2.64 0 1.32 1.32 0 0 1 2.64 0\"\n            />\n          </svg>\n        </button>\n      </span>\n\n      <!-- Extra Info Section -->\n      <div :class=\"['extra-info', showExtraInfo ? 'visible' : 'hidden']\">\n        <!-- <span v-if=\"entryModeCount > 0\">Entry KC: {{ entryModeCount }}</span>\n        <span v-if=\"normalModeCount > 0\">Normal KC: {{ normalModeCount }}</span>\n        <span v-if=\"expertModeCount > 0\">Expert KC: {{ expertModeCount }}</span> -->\n        <span\n          class=\"dynamic-tooltip underlined\"\n          data-tooltip-content=\"Estimations averaged across all rolls\"\n        >\n          Expected Purples: {{ expectedPurplePercent.toFixed(2) }}%\n        </span>\n        <span>Actual Purples: {{ actualPurplePercent.toFixed(2) }}%</span>\n        <span>Total Purples: {{ totalPurples }}</span>\n        <span>Dupe Purples: {{ dupesCount }}</span>\n        <span>Dry Streak: {{ dryStreak }}</span>\n        <span\n          class=\"dynamic-tooltip underlined\"\n          data-tooltip-content=\"Chance of receiving 1 or more purple (%)\"\n        >\n          Dryness: {{ drynessPercent.toFixed(2) }}%\n        </span>\n        <span>Longest Dry Streak: {{ longestDryStreak }}</span>\n        <span>Worst Dryness: {{ worstDryness.toFixed(2) }}%</span>\n        <span>Total Value: {{ formatTotalGP(totalLootValue) }}</span>\n        <span\n          class=\"dynamic-tooltip underlined\"\n          data-tooltip-content=\"Excluding completion capes\"\n          >Logs Complete: {{ logsComplete }}/{{ totalLogs\n          }}<template v-if=\"logsComplete >= totalLogs\">\n            ({{ greenLoggedKc }}kc)</template\n          >\n        </span>\n      </div>\n\n      <div class=\"loot-panel-container\">\n        <!-- Loot Results Section (Current Roll) -->\n        <h2 class=\"title-text\">\n          Loot from {{ lastRolls }} {{ lastRolls === 1 ? \"roll\" : \"rolls\" }}\n        </h2>\n        <div\n          class=\"loot-results\"\n          :class=\"{\n            'no-border': !currentLoot.length,\n            'white-border':\n              currentLoot.length &&\n              !showHasPurpleBorder &&\n              !showNewCollectionLogBorder,\n            'coll-log-border':\n              currentLoot.length &&\n              !showHasPurpleBorder &&\n              showNewCollectionLogBorder,\n            'purple-border': showHasPurpleBorder,\n          }\"\n        >\n          <!-- Dropdown for Current Loot Sorting -->\n          <details\n            ref=\"currentSortDropdown\"\n            class=\"dropdown sort-dropdown\"\n            @click=\"handleClickInside('current')\"\n          >\n            <summary role=\"button\">\n              <i class=\"fa fa-sort\"></i>\n            </summary>\n            <ul>\n              <li>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sortOptionCurrent\"\n                    value=\"valueDesc\"\n                    @change=\"setSortOption('current', 'valueDesc')\"\n                    :checked=\"currentSortOption === 'valueDesc'\"\n                  />\n                  Value (Highest)\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sortOptionCurrent\"\n                    value=\"valueAsc\"\n                    @change=\"setSortOption('current', 'valueAsc')\"\n                    :checked=\"currentSortOption === 'valueAsc'\"\n                  />\n                  Value (Lowest)\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sortOptionCurrent\"\n                    value=\"obtainedDesc\"\n                    @change=\"setSortOption('current', 'obtainedDesc')\"\n                    :checked=\"currentSortOption === 'obtainedDesc'\"\n                  />\n                  Newest\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sortOptionCurrent\"\n                    value=\"obtainedAsc\"\n                    @change=\"setSortOption('current', 'obtainedAsc')\"\n                    :checked=\"currentSortOption === 'obtainedAsc'\"\n                  />\n                  Oldest\n                </label>\n              </li>\n            </ul>\n          </details>\n\n          <!-- Loot Grid -->\n          <div v-if=\"currentLoot.length\" class=\"loot-grid\">\n            <div\n              v-for=\"(item, index) in sortedCurrentLoot\"\n              :key=\"item.itemName\"\n              class=\"loot-item\"\n            >\n              <a :href=\"item.url\" target=\"_blank\" style=\"text-decoration: none\">\n                <img\n                  :src=\"item.imageUrl\"\n                  :alt=\"item.itemName\"\n                  class=\"loot-image\"\n                  @mouseenter=\"\n                    isTrackedKCItem(item) &&\n                      showTooltip($event, getUniqueItemKC(item, true))\n                  \"\n                  @mousemove=\"isTrackedKCItem(item) && moveTooltip($event)\"\n                  @mouseleave=\"isTrackedKCItem(item) && hideTooltip()\"\n                />\n                <span\n                  v-if=\"item.quantity > 1\"\n                  :class=\"['quantity-text', formatQuantity(item).colorClass]\"\n                  >{{ formatQuantity(item).formattedQuantity }}</span\n                >\n              </a>\n            </div>\n          </div>\n          <p v-else class=\"subtitle-text\">No loot roll yet</p>\n        </div>\n\n        <!-- All Loot Results Section -->\n        <h2 class=\"title-text\">\n          Loot from {{ totalRollsDelayed }}\n          {{ totalRollsDelayed === 1 ? \"roll\" : \"rolls\" }}\n        </h2>\n        <div class=\"all-loot\">\n          <!-- Dropdown for All Loot Sorting -->\n          <details\n            ref=\"allSortDropdown\"\n            class=\"dropdown sort-dropdown\"\n            @click=\"handleClickInside('all')\"\n          >\n            <summary role=\"button\">\n              <i class=\"fa fa-sort\"></i>\n            </summary>\n            <ul>\n              <li>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sortOptionAll\"\n                    value=\"valueDesc\"\n                    @change=\"setSortOption('all', 'valueDesc')\"\n                    :checked=\"allSortOption === 'valueDesc'\"\n                  />\n                  Value (Highest)\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sortOptionAll\"\n                    value=\"valueAsc\"\n                    @change=\"setSortOption('all', 'valueAsc')\"\n                    :checked=\"allSortOption === 'valueAsc'\"\n                  />\n                  Value (Lowest)\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sortOptionAll\"\n                    value=\"obtainedDesc\"\n                    @change=\"setSortOption('all', 'obtainedDesc')\"\n                    :checked=\"allSortOption === 'obtainedDesc'\"\n                  />\n                  Newest\n                </label>\n              </li>\n              <li>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"sortOptionAll\"\n                    value=\"obtainedAsc\"\n                    @change=\"setSortOption('all', 'obtainedAsc')\"\n                    :checked=\"allSortOption === 'obtainedAsc'\"\n                  />\n                  Oldest\n                </label>\n              </li>\n            </ul>\n          </details>\n\n          <!-- Loot Grid -->\n          <div v-if=\"allLoot.length\" class=\"loot-grid\">\n            <div\n              v-for=\"(item, index) in sortedAllLoot\"\n              :key=\"item.itemName\"\n              class=\"loot-item\"\n            >\n              <a :href=\"item.url\" target=\"_blank\" style=\"text-decoration: none\">\n                <img\n                  :src=\"item.imageUrl\"\n                  :alt=\"item.itemName\"\n                  class=\"loot-image\"\n                  @mouseenter=\"\n                    isTrackedKCItem(item) &&\n                      showTooltip($event, getUniqueItemKC(item, true))\n                  \"\n                  @mousemove=\"isTrackedKCItem(item) && moveTooltip($event)\"\n                  @mouseleave=\"isTrackedKCItem(item) && hideTooltip()\"\n                />\n                <span\n                  v-if=\"item.quantity > 1\"\n                  :class=\"['quantity-text', formatQuantity(item).colorClass]\"\n                  >{{ formatQuantity(item).formattedQuantity }}</span\n                >\n              </a>\n            </div>\n          </div>\n          <p v-else class=\"subtitle-text\">No loot results yet</p>\n        </div>\n\n        <h2 class=\"title-text\">\n          Collection Log\n          <span\n            :style=\"{\n              color: logsCompleteDelayed >= totalLogs ? '#6bb537' : '',\n            }\"\n            >({{ logsCompleteDelayed }}/{{ totalLogs }})</span\n          >\n        </h2>\n\n        <div class=\"collection-log\">\n          <!-- Loot Grid for Collection Log Items -->\n          <div v-if=\"allCollLogItemsList.length\" class=\"loot-grid\">\n            <div\n              v-for=\"item in allCollLogItemsList\"\n              :key=\"item\"\n              class=\"loot-item\"\n              :class=\"{\n                'obtained-item': isItemObtained(item), // Normal style for obtained items\n                'not-obtained-item': !isItemObtained(item), // Opaque style for not obtained items\n              }\"\n            >\n              <!-- Wrap the image and quantity inside an anchor tag to link to the wiki page -->\n              <a\n                :href=\"getItemUrl(item)\"\n                target=\"_blank\"\n                style=\"text-decoration: none\"\n              >\n                <img\n                  :src=\"getItemImage(item)\"\n                  :alt=\"item\"\n                  class=\"loot-image\"\n                  @mouseenter=\"showTooltip($event, getUniqueItemKCByName(item))\"\n                  @mousemove=\"moveTooltip($event)\"\n                  @mouseleave=\"hideTooltip\"\n                />\n                <!-- Show quantity if obtained, otherwise don't display -->\n                <span\n                  v-if=\"getItemQuantity(item) > 1\"\n                  :class=\"[\n                    'quantity-text',\n                    formatQuantity({\n                      itemName: item,\n                      quantity: getItemQuantity(item),\n                    }).colorClass,\n                  ]\"\n                >\n                  {{\n                    formatQuantity({\n                      itemName: item,\n                      quantity: getItemQuantity(item),\n                    }).formattedQuantity\n                  }}\n                </span>\n              </a>\n            </div>\n          </div>\n          <p v-else class=\"subtitle-text\">No collection log items</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport LootSimulator from \"./LootSimulator\";\nexport default {\n  data() {\n    return {\n      personalPoints: 32000,\n      pathInvocation: 0,\n      challengeMode: \"disabled\",\n      numberOfRolls: 1,\n      lastRolls: 0,\n      currentLoot: [],\n      allLoot: [],\n      totalRolls: 0,\n      totalRollsDelayed: 0,\n      rollExecuted: false,\n      hasPurple: false,\n      newCollectionLog: false,\n      showHasPurpleBorder: false,\n      showNewCollectionLogBorder: false,\n      lootSimulator: null,\n      dryStreak: 0,\n      longestDryStreak: 0, // Longest dry streak\n      drynessPercent: 0,\n      worstDryness: 0, // Worst dryness percentage\n      logsComplete: 0, // Number of completed collection logs\n      logsCompleteDelayed: 0,\n      greenLoggedKc: -1,\n      totalLogs: 19,\n      variance: 5,\n      rollHistory: [],\n      autoRolling: false,\n      autoRollInterval: 300, // Default interval in milliseconds\n      stopOnPurple: true,\n      autoRollTimer: null,\n      totalPurples: 0,\n      itemKCs: {}, // Tracks KCs for unique items\n      currentitemKCs: {}, // Tracks KCs for unique items obtained in the current roll(s)\n      petObtained: false, // Tracks if the pet has been obtained\n      showExtraInfo: false, // Controls visibility of extra info\n      autoRollStopCondition: \"purple\", // Default to 'never',\n      collectionLog: {}, // Initialize as an empty object\n      uniqueItemsList: [\n        \"Dexterous prayer scroll\",\n        \"Arcane prayer scroll\",\n        \"Twisted buckler\",\n        \"Dragon hunter crossbow\",\n        \"Dinh's bulwark\",\n        \"Ancestral hat\",\n        \"Ancestral robe top\",\n        \"Ancestral robe bottom\",\n        \"Dragon claws\",\n        \"Elder maul\",\n        \"Kodai insignia\",\n        \"Twisted bow\",\n      ],\n      tertiaryItemsList: [\n        \"Onyx\",\n        \"Ancient tablet\",\n        \"Metamorphic dust\",\n        \"Twisted ancestral colour kit\",\n        \"Olmlet\",\n      ],\n      allCollLogItemsList: [\n        \"Twisted bow\",\n        \"Kodai insignia\",\n        \"Elder maul\",\n        \"Dragon claws\",\n        \"Dinh's bulwark\",\n        \"Ancestral hat\",\n        \"Ancestral robe top\",\n        \"Ancestral robe bottom\",\n        \"Twisted buckler\",\n        \"Dragon hunter crossbow\",\n        \"Dexterous prayer scroll\",\n        \"Arcane prayer scroll\",\n        \"Torn prayer scroll\",\n        \"Dark relic\",\n        \"Ancient tablet\",\n        \"Metamorphic dust\",\n        \"Twisted ancestral colour kit\",\n        \"Onyx\",\n        \"Olmlet\",\n      ],\n      selectedItems: [], // Holds the selected items for 'Choose Items' option,\n      ancientTabletObtained: false,\n      sortOptions: {\n        current: \"valueDesc\", // Default sort option for current loot\n        all: \"valueDesc\", // Default sort option for all loot\n      },\n      // Store acquired dates\n      acquiredDates: {\n        current: {},\n        all: {},\n      },\n      currentSortOption: \"valueDesc\", // Default to Value (High) for current loot\n      allSortOption: \"valueDesc\", // Default to Value (High) for all loot\n      activeDropdown: null, // To track active dropdown,\n      imageCache: new Set(),\n      imageCacheRefs: new Set(),\n      expectedPurplePercent: 0, // Expected Purple %\n      actualPurplePercent: 0, // Actual Purple %\n      totalPurpleChanceSum: 0, // Cumulative sum of purple chances\n      dupesCount: 0, // Total number of dupes\n      imageList: [\n        \"Adamantite_ore.png\",\n        \"Ancestral_hat.png\",\n        \"Ancestral_robe_bottom.png\",\n        \"Ancestral_robe_top.png\",\n        \"Ancient_tablet.png\",\n        \"Arcane_prayer_scroll.png\",\n        \"Blood_rune.png\",\n        \"Coal.png\",\n        \"Dark_relic.png\",\n        \"Death_rune.png\",\n        \"Dexterous_prayer_scroll.png\",\n        \"Dinh's_bulwark.png\",\n        \"Dragon_arrow_5.png\",\n        \"Dragon_claws.png\",\n        \"Dragon_hunter_crossbow.png\",\n        \"Dynamite.png\",\n        \"Elder_maul.png\",\n        \"Gold_ore.png\",\n        \"Grimy_avantoe.png\",\n        \"Grimy_cadantine.png\",\n        \"Grimy_dwarf_weed.png\",\n        \"Grimy_irit_leaf.png\",\n        \"Grimy_kwuarm.png\",\n        \"Grimy_lantadyme.png\",\n        \"Grimy_ranarr_weed.png\",\n        \"Grimy_snapdragon.png\",\n        \"Grimy_toadflax.png\",\n        \"Grimy_torstol.png\",\n        \"Kodai_insignia.png\",\n        \"Lizardman_fang.png\",\n        \"Mahogany_plank.png\",\n        \"Metamorphic_dust.png\",\n        \"Mithril_ore.png\",\n        \"Olmlet.png\",\n        \"Onyx.png\",\n        \"Pure_essence.png\",\n        \"Rune_arrow.png\",\n        \"Runite_ore.png\",\n        \"Saltpetre.png\",\n        \"Silver_ore.png\",\n        \"Soul_rune.png\",\n        \"Teak_plank.png\",\n        \"Torn_prayer_scroll.png\",\n        \"Twisted_ancestral_colour_kit.png\",\n        \"Twisted_bow.png\",\n        \"Twisted_buckler.png\",\n        \"Uncut_diamond.png\",\n        \"Uncut_emerald.png\",\n        \"Uncut_ruby.png\",\n        \"Uncut_sapphire.png\",\n        \"Clue_scroll_(elite).png\",\n      ],\n    };\n  },\n  computed: {\n    expectedPurpleRange() {\n      // Ensure the lootSimulator is correctly initialized before calling this\n      if (!this.lootSimulator) return { min: 0, max: 0 };\n      const range = this.lootSimulator.getExpectedPurpleRange();\n      return {\n        min: range.min,\n        max: range.max,\n      };\n    },\n    canStartAutoRoll() {\n      if (\n        (this.autoRollStopCondition === \"chooseItemsAny\" ||\n          this.autoRollStopCondition === \"chooseItemsAll\") &&\n        (!this.selectedItems || this.selectedItems.length === 0)\n      ) {\n        return false;\n      }\n      return !this.isOneTimeAutoRollStopConditionMet();\n    },\n    sortedCurrentLoot() {\n      return this.sortLoot(this.currentLoot, this.currentSortOption);\n    },\n    sortedAllLoot() {\n      return this.sortLoot(this.allLoot, this.allSortOption);\n    },\n    totalLootValue() {\n      return this.allLoot.reduce((total, item) => {\n        return total + item.itemValue * item.quantity;\n      }, 0);\n    },\n  },\n  created() {\n    // Load sorting options from localStorage or default to 'valueDesc'\n    const savedCurrentSortOption = localStorage.getItem(\"currentSortOption\");\n    const savedAllSortOption = localStorage.getItem(\"allSortOption\");\n\n    // Initialize with saved options or defaults\n    this.currentSortOption = savedCurrentSortOption || \"valueDesc\";\n    this.allSortOption = savedAllSortOption || \"valueDesc\";\n\n    // Apply initial sorting\n    this.applySorting(\"current\");\n    this.applySorting(\"all\");\n\n    const savedParameters = localStorage.getItem(\"savedParameters\");\n    if (savedParameters) {\n      const params = JSON.parse(savedParameters);\n\n      // Load parameters with type checking\n      this.numberOfRolls =\n        params.numberOfRolls !== undefined ? parseInt(params.numberOfRolls) : 1;\n      this.autoRollStopCondition = params.autoRollStopCondition || \"purple\";\n      this.personalPoints =\n        params.personalPoints !== undefined\n          ? parseInt(params.personalPoints)\n          : 32000;\n      this.challengeMode =\n        params.challengeMode !== undefined ? params.challengeMode : \"disabled\";\n      this.variance =\n        params.variance !== undefined ? parseInt(params.variance) : 5;\n      this.autoRollInterval =\n        params.autoRollInterval !== undefined\n          ? parseInt(params.autoRollInterval)\n          : 300;\n      this.selectedItems =\n        params.selectedItems !== undefined ? params.selectedItems : [];\n    }\n\n    // Initialize the loot simulator with loaded parameters\n    this.initializeLootSimulator();\n  },\n  watch: {\n    autoRollStopCondition: \"saveParameters\",\n    personalPoints() {\n      this.validateMinMax(\"personalPoints\", 0, 999999);\n      this.saveParameters();\n      this.refreshLootSimulator();\n    },\n    challengeMode() {\n      this.saveParameters();\n      this.refreshLootSimulator();\n    },\n    variance() {\n      this.validateMinMax(\"variance\", 0, 200);\n      this.saveParameters();\n      this.refreshLootSimulator();\n    },\n    numberOfRolls() {\n      this.validateMinMax(\"numberOfRolls\", 1, 10000);\n      this.saveParameters();\n    },\n    autoRollInterval() {\n      this.validateMinMax(\"autoRollInterval\", 1, 3600000);\n      this.saveParameters();\n    },\n    selectedItems: {\n      // eslint-disable-next-line no-unused-vars\n      handler(newVal) {\n        this.saveParameters();\n      },\n      deep: true,\n    },\n  },\n  mounted() {\n    this.preloadImages(); // Preload images when the component mounts\n\n    setTimeout(() => {\n      this.preloadImages();\n    }, 500);\n\n    // Get references to all elements with the class 'dynamic-tooltip'\n    const tooltip = document.getElementById(\"tooltip\");\n    const tooltipElements = document.querySelectorAll(\".dynamic-tooltip\");\n\n    tooltipElements.forEach((element) => {\n      const tooltipContent = element.getAttribute(\"data-tooltip-content\");\n\n      // Event listener for mouse hover over the dynamic-tooltip element\n      element.addEventListener(\"mouseenter\", () => {\n        // Set the tooltip content dynamically from the data attribute\n        tooltip.textContent = tooltipContent;\n        tooltip.style.display = \"block\";\n      });\n\n      // Event listener to update the position of the tooltip based on the mouse\n      element.addEventListener(\"mousemove\", (event) => {\n        // Set the tooltip position relative to the mouse cursor\n        tooltip.style.left = `${event.pageX + 15}px`; // 15px to the right of the cursor\n        tooltip.style.top = `${event.pageY - 25}px`; // 25px above the cursor\n      });\n\n      // Event listener to hide the tooltip when leaving the element\n      element.addEventListener(\"mouseleave\", () => {\n        tooltip.style.display = \"none\";\n      });\n    });\n\n    document.addEventListener(\"click\", this.handleClickOutside);\n  },\n  beforeUnmount() {\n    this.stopAutoRoll();\n    document.removeEventListener(\"click\", this.handleClickOutside);\n  },\n  methods: {\n    isTrackedKCItem(item) {\n      return (\n        item.type === \"unique\" ||\n        item.type === \"tertiary\" ||\n        item.itemName === \"Ancient tablet\" ||\n        item.itemName === \"Torn prayer scroll\" ||\n        item.itemName === \"Onyx\" ||\n        item.itemName === \"Dark relic\"\n      );\n    },\n    validateMinMax(field, min, max) {\n      if (this[field] < min) {\n        this[field] = min;\n      } else if (this[field] > max) {\n        this[field] = max;\n      }\n    },\n    formatPurpleRate(min, max) {\n      // Try comparing with two decimal places\n      if (min.toFixed(2) != max.toFixed(2)) {\n        return `${min.toFixed(2)}% - ${max.toFixed(2)}%`;\n      }\n      // Try comparing with three decimal places\n      else if (min.toFixed(3) !== max.toFixed(3)) {\n        return `${min.toFixed(3)}% - ${max.toFixed(3)}%`;\n      }\n      // Default to four decimal places comparison\n      else if (min.toFixed(4) !== max.toFixed(4)) {\n        return `${min.toFixed(4)}% - ${max.toFixed(4)}%`;\n      } else {\n        return `~${min.toFixed(2)}%`;\n      }\n    },\n    isItemObtained(item) {\n      return this.allLoot.some((lootItem) => lootItem.itemName === item);\n    },\n    // Get quantity for the item from allLoot\n    getItemQuantity(item) {\n      const loot = this.allLoot.find((lootItem) => lootItem.itemName === item);\n      return loot ? loot.quantity : 0;\n    },\n    // Get the KC for an item based on its name\n    getUniqueItemKCByName(itemName) {\n      const itemObject = this.allLoot.find(\n        (lootItem) => lootItem.itemName === itemName\n      );\n\n      if (!itemObject) return \"\"; // Return empty string if item not found\n\n      // Now pass the object to the existing method to retrieve KCs\n      return this.getUniqueItemKC(itemObject, false);\n    },\n    getItemImage(item) {\n      return `images/${item.replace(/\\s/g, \"_\")}.png`;\n    },\n    getItemUrl(itemName) {\n      return `https://oldschool.runescape.wiki/w/${itemName.replace(\n        /\\s/g,\n        \"_\"\n      )}`;\n    },\n    preloadImages() {\n      this.imageList.forEach((image) => {\n        const img = new Image();\n        img.src = `images/${image}`; // Modify the path if needed\n      });\n    },\n    preloadLootImages(lootItems) {\n      return new Promise((resolve) => {\n        let loadedCount = 0;\n\n        // Filter loot items to preload only uncached images\n        const uncachedImages = lootItems.filter(\n          (item) => !this.imageCache.has(item.imageUrl)\n        );\n        const totalUncached = uncachedImages.length;\n\n        // If all images are cached, resolve immediately\n        if (totalUncached === 0) {\n          resolve();\n          return;\n        }\n\n        // Preload uncached images\n        uncachedImages.forEach((item) => {\n          const img = new Image();\n          img.src = item.imageUrl;\n\n          img.onload = img.onerror = () => {\n            loadedCount++;\n            this.imageCacheRefs.add(img);\n            this.imageCache.add(item.imageUrl); // Cache the image URL after loading\n\n            if (loadedCount === totalUncached) {\n              resolve(); // Resolve when all uncached images are preloaded\n            }\n          };\n        });\n      });\n    },\n    handleClickInside(lootType) {\n      // Handle click inside the dropdown\n      this.activeDropdown = lootType;\n    },\n    handleClickOutside(event) {\n      const currentDropdown = this.$refs.currentSortDropdown;\n      const allDropdown = this.$refs.allSortDropdown;\n\n      if (\n        this.activeDropdown &&\n        !currentDropdown.contains(event.target) &&\n        !allDropdown.contains(event.target)\n      ) {\n        // Close both dropdowns if clicked outside\n        currentDropdown.removeAttribute(\"open\");\n        allDropdown.removeAttribute(\"open\");\n        this.activeDropdown = null;\n      }\n    },\n    setSortOption(lootType, sortOption) {\n      if (lootType === \"current\") {\n        this.currentSortOption = sortOption;\n        localStorage.setItem(\"currentSortOption\", sortOption);\n        this.applySorting(\"current\");\n        this.$refs.currentSortDropdown.removeAttribute(\"open\"); // Close the dropdown\n      } else if (lootType === \"all\") {\n        this.allSortOption = sortOption;\n        localStorage.setItem(\"allSortOption\", sortOption);\n        this.applySorting(\"all\");\n        this.$refs.allSortDropdown.removeAttribute(\"open\"); // Close the dropdown\n      }\n    },\n\n    // Method to apply sorting to either 'current' or 'all' loot\n    applySorting(lootType) {\n      if (lootType === \"current\") {\n        this.currentLoot = this.sortLoot(\n          this.currentLoot,\n          this.currentSortOption\n        );\n      } else if (lootType === \"all\") {\n        this.allLoot = this.sortLoot(this.allLoot, this.allSortOption);\n      }\n    },\n\n    sortLoot(loot, sortOption) {\n      if (!loot || loot.length === 0) return [];\n\n      if (sortOption === \"valueDesc\") {\n        return loot.sort(\n          (a, b) => b.itemValue * b.quantity - a.itemValue * a.quantity\n        ); // Sort by total value, highest first\n      } else if (sortOption === \"valueAsc\") {\n        return loot.sort(\n          (a, b) => a.itemValue * a.quantity - b.itemValue * b.quantity\n        ); // Sort by total value, lowest first\n      } else if (sortOption === \"obtainedDesc\") {\n        return loot.sort((a, b) => {\n          const dateA = a.acquiredDate || 0;\n          const dateB = b.acquiredDate || 0;\n          return dateB - dateA; // Newest first\n        });\n      } else if (sortOption === \"obtainedAsc\") {\n        return loot.sort((a, b) => {\n          const dateA = a.acquiredDate || 0;\n          const dateB = b.acquiredDate || 0;\n          return dateA - dateB; // Oldest first\n        });\n      }\n    },\n    formatQuantity(item) {\n      const quantity = item.quantity;\n      let formattedQuantity = quantity.toString(); // Default to normal number\n      let colorClass = \"yellow\"; // Default color\n\n      if (quantity >= 10000000000) {\n        formattedQuantity = `${Math.floor(quantity / 1000000000)}b`; // Format in billions\n        colorClass = \"green\"; // Color for billion values\n      } else if (quantity >= 10000000) {\n        formattedQuantity = `${Math.floor(quantity / 1000000)}m`; // Format in millions\n        colorClass = \"green\"; // Color for million values\n      } else if (quantity >= 100000) {\n        formattedQuantity = `${Math.floor(quantity / 1000)}k`; // Format in thousands\n        colorClass = \"white\"; // Color for thousand values\n      }\n\n      return { formattedQuantity, colorClass };\n    },\n    formatTotalGP(value) {\n      let formattedValue = value.toString(); // Default to normal number\n\n      if (value >= 10000000000) {\n        formattedValue = `${Math.floor(value / 1000000000)}b`; // Format in billions\n      } else if (value >= 10000000) {\n        formattedValue = `${Math.floor(value / 1000000)}m`; // Format in millions\n      } else if (value >= 100000) {\n        formattedValue = `${Math.floor(value / 1000)}k`; // Format in thousands\n      }\n\n      return formattedValue; // Return formatted string\n    },\n    saveParameters() {\n      const parameters = {\n        numberOfRolls: this.numberOfRolls,\n        autoRollStopCondition: this.autoRollStopCondition,\n        personalPoints: this.personalPoints,\n        challengeMode: this.challengeMode,\n        variance: this.variance,\n        autoRollInterval: this.autoRollInterval,\n        selectedItems:\n          this.autoRollStopCondition === \"chooseItemsAny\" ||\n          this.autoRollStopCondition === \"chooseItemsAll\"\n            ? this.selectedItems\n            : [],\n      };\n      localStorage.setItem(\"savedParameters\", JSON.stringify(parameters));\n    },\n\n    initializeLootSimulator() {\n      this.lootSimulator = new LootSimulator(\n        this.personalPoints,\n        this.challengeMode === \"enabled\",\n        false,\n        this.variance\n      );\n    },\n    getUniqueItemKC(item, highlightCurrentKCs = false) {\n      const maxKCShown = 8;\n      if (this.isTrackedKCItem(item)) {\n        const allKCs = this.itemKCs[item.itemName] || [];\n        let kcList;\n\n        if (allKCs.length > 0) {\n          // Get the first KC\n          const firstKC = allKCs[0];\n\n          if (highlightCurrentKCs) {\n            const currentKCs = this.currentitemKCs[item.itemName] || [];\n            const currentKCsSet = new Set(currentKCs.map(Number));\n\n            // Slice the last 10 KCs\n            const lastKCs = allKCs.slice(-maxKCShown);\n\n            // Map and highlight the current KCs\n            kcList = lastKCs\n              .map((kc) => {\n                const kcNum = Number(kc);\n                if (currentKCsSet.has(kcNum)) {\n                  return `[${kc}]`; // Highlight current KC\n                }\n                return kc;\n              })\n              .join(\", \");\n\n            // Add omission indicator with the first KC if necessary\n            return allKCs.length > maxKCShown\n              ? `KC: ${firstKC}, ..., ${kcList}`\n              : `KC: ${kcList}`;\n          } else {\n            // Slice the last 10 KCs without highlighting\n            kcList = allKCs.slice(-maxKCShown).join(\", \");\n\n            // Add omission indicator with the first KC if necessary\n            return allKCs.length > maxKCShown\n              ? `KC: ${firstKC}, ..., ${kcList}`\n              : `KC: ${kcList}`;\n          }\n        }\n      }\n      return \"\"; // Return empty string if not a unique or tertiary\n    },\n    toggleExtraInfo() {\n      this.showExtraInfo = !this.showExtraInfo;\n    },\n    refreshLootSimulator() {\n      this.lootSimulator.personalPoints = parseInt(this.personalPoints, 10);\n      this.lootSimulator.challengeMode = this.challengeMode === \"enabled\"; // Convert string to boolean\n      this.lootSimulator.variance = this.variance; // Pass the variance value\n    },\n    async simulateLoot() {\n      if (this.isSimulating) return; // Prevent running multiple simulations at once\n      this.isSimulating = true; // Set flag to indicate simulation is running\n\n      // Update obtained timestamps for current loot\n      //const currentTimestamp = Date.now(); // Use a timestamp for sorting\n\n      this.refreshLootSimulator();\n\n      const combinedCurrentRolls = {};\n      this.hasPurple = false; // Reset purple check for each roll\n      this.newCollectionLog = false;\n\n      const startingTotalRolls = this.totalRolls;\n      // Clear current unique item KCs\n      this.currentitemKCs = {};\n      this.acquiredDates.current = {};\n\n      let currentPurpleChanceSum = 0;\n\n      for (let i = 0; i < this.numberOfRolls; i++) {\n        this.totalRolls++;\n\n        if (this.lootSimulator.raidLevel < 150) {\n          this.entryModeCount++;\n        } else if (this.lootSimulator.raidLevel < 300) {\n          this.normalModeCount++;\n        } else {\n          this.expertModeCount++;\n        }\n\n        const currentKC = startingTotalRolls + i + 1; // Calculate current KC\n        const currentTimestamp = Date.now() + i * 1000; // Add i seconds to ensure ordering\n\n        const result = this.lootSimulator.simulateLootRoll(\n          this.ancientTabletObtained\n        );\n\n        this.ancientTabletObtained = result.ancientTabletObtained;\n\n        const lootResults = result.lootResults;\n\n        let purpleChance = 0;\n        let rewardP = this.lootSimulator.getUniqueRewardPool(\n          result.totalPoints\n        );\n        for (const chance of rewardP.uniqueChances) {\n          purpleChance += chance; // Sum up all the chances for each roll\n        }\n\n        currentPurpleChanceSum += purpleChance; // Sum the purple chances for each roll\n\n        // Calculate probability of getting 1 or more drops, i.e. 1 - P(0 drops)\n        const probabilityOfOneOrMoreDrops = 1 - Math.pow(1 - purpleChance, 1);\n\n        let foundPurple = false; // Track if purple loot was found in this roll\n\n        // Store the current roll's purple chance and the probability of 1 or more drops\n        this.rollHistory.push({\n          personalPoints: this.personalPoints,\n          challengeMode: this.challengeMode,\n          purpleChance: purpleChance,\n          probabilityOfOneOrMoreDrops: probabilityOfOneOrMoreDrops,\n        });\n\n        lootResults.forEach((item) => {\n          if (this.isTrackedKCItem(item)) {\n            if (item.type === \"unique\") {\n              this.hasPurple = true;\n              foundPurple = true;\n            }\n\n            if (item.itemName === \"Olmlet\") {\n              this.petObtained = true;\n            }\n\n            if (!this.itemKCs[item.itemName]) {\n              this.itemKCs[item.itemName] = [];\n            }\n            this.itemKCs[item.itemName].push(currentKC);\n\n            // Also record in currentitemKCs\n            if (!this.currentitemKCs[item.itemName]) {\n              this.currentitemKCs[item.itemName] = [];\n            }\n            this.currentitemKCs[item.itemName].push(currentKC);\n          }\n\n          // Ensure each item has an acquiredDate\n          item.acquiredDate = currentTimestamp;\n\n          // Add or update item in combinedCurrentRolls\n          if (combinedCurrentRolls[item.itemName]) {\n            // Update quantity and acquiredDate if the item exists\n            combinedCurrentRolls[item.itemName].quantity += item.quantity;\n            combinedCurrentRolls[item.itemName].acquiredDate = currentTimestamp; // Always update to latest timestamp\n          } else {\n            combinedCurrentRolls[item.itemName] = { ...item };\n          }\n        });\n\n        // Update longest dry streak if the streak is updated\n        if (!foundPurple) {\n          this.dryStreak += 1;\n          if (this.dryStreak > this.longestDryStreak) {\n            this.longestDryStreak = this.dryStreak;\n          }\n        } else {\n          this.totalPurples += 1; // Increment total purples\n          this.dryStreak = 0;\n          this.rollHistory = []; // Clear roll history on drop\n        }\n\n        // Calculate dryness percentage based on roll history\n        this.drynessPercent = this.calculateOverallDrynessPercent();\n\n        // Update the worst dryness percentage if the current one is higher\n        if (parseFloat(this.drynessPercent) > parseFloat(this.worstDryness)) {\n          this.worstDryness = this.drynessPercent;\n        }\n\n        // Update collection log completion count\n        this.updateCollectionLog(lootResults);\n      }\n\n      // Add current simulation's purple chances to the total sum across the session\n      this.totalPurpleChanceSum += currentPurpleChanceSum;\n\n      // Preload the images before updating the loot\n      await this.preloadLootImages(Object.values(combinedCurrentRolls));\n\n      this.totalRollsDelayed = this.totalRolls;\n      this.logsCompleteDelayed = this.logsComplete;\n      this.showHasPurpleBorder = this.hasPurple;\n      this.showNewCollectionLogBorder = this.newCollectionLog;\n      this.currentLoot = Object.values(combinedCurrentRolls);\n\n      this.mergeLootResults(this.currentLoot);\n\n      this.lastRolls = this.numberOfRolls;\n      this.rollExecuted = true;\n\n      // Calculate expected purple percentage\n      if (this.totalRolls > 0) {\n        this.expectedPurplePercent =\n          (this.totalPurpleChanceSum / this.totalRolls) * 100;\n      } else {\n        this.expectedPurplePercent = 0.0; // Avoid division by zero\n      }\n\n      // Calculate actual purple percentage\n      if (this.totalRolls > 0) {\n        this.actualPurplePercent = (this.totalPurples / this.totalRolls) * 100;\n      } else {\n        this.actualPurplePercent = 0.0; // Avoid division by zero\n      }\n\n      this.recheckAutoCondition();\n\n      // Calculate dupes\n      this.calculateDupes();\n\n      this.isSimulating = false; // Reset the flag after simulation completes\n    },\n    recheckAutoCondition() {\n      if (\n        this.autoRollStopCondition === \"chooseItemsAny\" &&\n        this.selectedItems.some((selectedItem) =>\n          this.currentLoot.some((loot) => loot.itemName === selectedItem)\n        )\n      ) {\n        this.stopAutoRoll();\n      } else if (\n        this.autoRollStopCondition === \"newCollectionLog\" &&\n        this.newCollectionLog\n      ) {\n        this.stopAutoRoll();\n      } else if (this.autoRollStopCondition === \"purple\" && this.hasPurple) {\n        this.stopAutoRoll();\n      } else if (this.isOneTimeAutoRollStopConditionMet()) {\n        this.stopAutoRoll();\n      }\n    },\n    calculateDupes() {\n      let totalDupes = 0;\n\n      // Loop through all unique (purple) items only\n      this.uniqueItemsList.forEach((item) => {\n        const quantity = this.getItemQuantity(item); // Assuming getItemQuantity fetches the total amount\n\n        if (quantity > 1) {\n          // Count extras (duplicates) as dupes\n          totalDupes += quantity - 1;\n        }\n      });\n\n      // Update the dupes count with the total calculated value\n      this.dupesCount = totalDupes;\n    },\n    calculateOverallDrynessPercent() {\n      let cumulativeDrynessProbability = 1;\n\n      // Loop through each roll in history\n      for (let roll of this.rollHistory) {\n        const purpleChance = roll.purpleChance;\n        const probabilityOfZeroDrops = Math.pow(1 - purpleChance, 1); // P(0 drops) for each roll\n\n        // Multiply dry probability for each roll\n        cumulativeDrynessProbability *= probabilityOfZeroDrops;\n      }\n\n      const drynessPercent = (1 - cumulativeDrynessProbability) * 100; // Convert to percentage\n      return drynessPercent; // Return result as a percentage\n    },\n    mergeLootResults(newLoot) {\n      newLoot.forEach((newItem) => {\n        const index = this.allLoot.findIndex(\n          (item) => item.itemName === newItem.itemName\n        );\n        if (index !== -1) {\n          const existingItem = this.allLoot[index];\n          const updatedItem = {\n            ...existingItem,\n            quantity: existingItem.quantity + newItem.quantity,\n            type: newItem.type, // Ensure type is updated\n            acquiredDate: newItem.acquiredDate, // Update to latest acquisition date\n          };\n          this.allLoot.splice(index, 1, updatedItem);\n        } else {\n          this.allLoot.push({ ...newItem });\n        }\n      });\n    },\n    updateCollectionLog(lootResults) {\n      lootResults.forEach((loot) => {\n        if (\n          loot.itemName === \"Ancient tablet\" ||\n          loot.itemName === \"Torn prayer scroll\" ||\n          loot.itemName === \"Onyx\" ||\n          loot.itemName === \"Dark relic\" ||\n          ((loot.type === \"unique\" || loot.type === \"tertiary\") &&\n            loot.itemName !== \"Clue scroll (elite)\")\n        ) {\n          // If the item is not yet in the collection log, mark it as newly added\n          if (!this.collectionLog[loot.itemName]) {\n            this.collectionLog[loot.itemName] = true;\n            this.newCollectionLog = true;\n          }\n        }\n      });\n\n      // Update logsComplete count\n      this.logsComplete = Object.keys(this.collectionLog).length;\n\n      if (this.logsComplete >= this.totalLogs && this.greenLoggedKc == -1) {\n        this.greenLoggedKc = this.totalRolls;\n      }\n    },\n    // Reset Loot Data Without Affecting Parameters\n    resetLoot() {\n      this.stopAutoRoll();\n      this.currentLoot = [];\n      this.allLoot = [];\n      this.totalRolls = 0;\n      this.totalRollsDelayed = 0;\n      this.lastRolls = 0;\n      this.rollExecuted = false;\n      this.showHasPurpleBorder = false;\n      this.showNewCollectionLogBorder = false;\n      this.hasPurple = false;\n      this.newCollectionLog = false;\n      this.dryStreak = 0;\n      this.longestDryStreak = 0; // Reset longest dry streak\n      this.drynessPercent = 0;\n      this.worstDryness = 0; // Reset worst dryness\n      this.rollHistory = [];\n      this.totalPurples = 0; // Reset total purples\n      this.itemKCs = {};\n      this.currentitemKCs = {};\n      this.petObtained = false; // Reset pet obtained flag\n      this.ancientTabletObtained = false;\n      this.collectionLog = {};\n      this.logsComplete = 0;\n      this.logsCompleteDelayed = 0;\n      this.greenLoggedKc = -1;\n      this.expectedPurplePercent = 0.0; // Expected Purple %\n      this.actualPurplePercent = 0.0; // Actual Purple %\n      this.totalPurpleChanceSum = 0; // Cumulative sum of purple chances\n      this.dupesCount = 0; // Total number of dupes\n      this.initializeLootSimulator();\n    },\n    // Start the auto-roll process\n    async startAutoRoll() {\n      if (this.autoRolling) return; // Prevent multiple auto-roll starts\n\n      // Check if the ot auto roll stop condition is already met\n      if (this.isOneTimeAutoRollStopConditionMet()) {\n        return;\n      }\n\n      this.autoRolling = true; // Mark auto-rolling as active\n\n      // Function to handle each auto-roll cycle\n      const autoRollWithDynamicInterval = async () => {\n        if (!this.autoRolling) return; // Exit if auto rolling is stopped\n\n        const startTime = Date.now(); // Record the start time\n\n        // Only run the simulation if not currently simulating\n        if (!this.isSimulating) {\n          await this.autoRollSimulate(); // Wait for the simulation to complete\n        }\n\n        const endTime = Date.now(); // Record the end time after simulation\n        const elapsedTime = endTime - startTime; // Calculate how long the simulation took\n\n        // Calculate the remaining time to wait in the interval\n        const remainingTime = this.autoRollInterval - elapsedTime;\n\n        // Wait for the remaining time (or 0 if simulation took longer than the interval)\n        setTimeout(() => {\n          autoRollWithDynamicInterval(); // Recursively call the function to start the next roll\n        }, Math.max(0, remainingTime)); // Ensure it waits 0 or more milliseconds\n      };\n\n      // Start the first iteration\n      await autoRollWithDynamicInterval();\n    },\n\n    // Method to simulate the loot roll\n    async autoRollSimulate() {\n      await this.simulateLoot(); // Ensure this waits for the async simulation to finish\n    },\n\n    // Stop the auto-roll process\n    stopAutoRoll() {\n      this.autoRolling = false; // Stop auto-rolling\n    },\n    isOneTimeAutoRollStopConditionMet() {\n      // Excludes purple and selectedAny as would auto-fail under certain conditions\n      if (this.autoRollStopCondition === \"pet\") {\n        return this.petObtained;\n      } else if (this.autoRollStopCondition === \"log\") {\n        return this.logsComplete >= this.totalLogs;\n      } else if (this.autoRollStopCondition === \"allUniques\") {\n        return this.isAllUniquesObtained();\n      } else if (this.autoRollStopCondition === \"chooseItemsAll\") {\n        return this.areAllSelectedItemsObtained();\n      }\n      return false; // For 'never' and 'purple', we don't disable the button\n    },\n    // Tooltips methods\n    showTooltip(event, tooltipContent) {\n      if (!tooltipContent) return;\n      const tooltip = document.getElementById(\"tooltip\");\n      tooltip.textContent = tooltipContent;\n      tooltip.style.display = \"block\";\n      this.moveTooltip(event);\n    },\n    moveTooltip(event) {\n      const tooltip = document.getElementById(\"tooltip\");\n      tooltip.style.left = `${event.pageX + 15}px`;\n      tooltip.style.top = `${event.pageY - 25}px`;\n    },\n    hideTooltip() {\n      const tooltip = document.getElementById(\"tooltip\");\n      tooltip.style.display = \"none\";\n    },\n    isAllUniquesObtained() {\n      return this.uniqueItemsList.every((item) => this.collectionLog[item]);\n    },\n    areAllSelectedItemsObtained() {\n      if (this.selectedItems.length === 0) {\n        console.log(\"No items selected.\");\n        return false; // No items selected, cannot be obtained yet\n      }\n\n      // Log selected items and collection log for debugging\n      this.selectedItems.forEach((item) => {\n        console.log(`Checking ${item}:`, this.collectionLog[item]);\n      });\n\n      // Ensure all selected items are obtained\n      return this.selectedItems.every(\n        (item) => this.collectionLog[item] === true\n      );\n    },\n  },\n};\n</script>\n\n<style>\n/* Basic theming */\n\nhtml {\n  background-color: #101010 !important;\n  color: rgb(189, 189, 189);\n  font-size: 16px;\n}\n\n.app-wrapper {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n  min-height: 100vh;\n  font-family: Arial, sans-serif;\n  margin-bottom: 100px;\n}\n\nheader {\n  text-align: center;\n}\n\nh1 {\n  margin-top: 60px;\n  font-family: \"runescape\";\n  font-size: 42px;\n}\n\n.main-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  margin-top: 0;\n  padding-top: 0;\n}\n\n.parameters {\n  border-radius: 8px;\n  width: 90%;\n  max-width: 90%;\n}\n\n.parameter-controls {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 20px; /* Add spacing between each label-input pair */\n  flex-wrap: wrap; /* Allow wrapping if the screen is too small */\n  margin-bottom: 10px;\n}\n\n.expected-purple-rate {\n  color: #adadad;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  font-style: italic;\n}\n\n.parameter-controls label {\n  display: flex;\n  flex-direction: column; /* Stack label and input */\n  align-items: center; /* Center the input below the label */\n}\n\n.parameter-generation {\n  margin-top: 30px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap; /* Allow wrapping if the screen is too small */\n  gap: 10px; /* Add spacing between buttons */\n}\n\nbutton {\n  padding: 10px 25px;\n  background-color: #98c21c;\n  color: black;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  outline: none;\n}\n\nbutton:focus,\nbutton:active {\n  outline: none;\n  box-shadow: none;\n}\n\nbutton::-moz-focus-inner {\n  border: 0;\n}\n\nbutton:visited {\n  color: inherit;\n}\n\n/* Disabled Button Style */\nbutton:disabled {\n  background-color: grey;\n  cursor: not-allowed;\n}\n\n.disabled-button {\n  background-color: grey;\n  cursor: not-allowed;\n}\n\n.parameters button {\n  margin-top: 0; /* Align the button horizontally */\n  padding: 10px 25px;\n  background-color: #98c21c;\n  color: black;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 5rem;\n  max-width: 10rem;\n  flex-grow: 1; /* Ensure the button takes equal space */\n  margin-left: 10px;\n  margin-right: 10px;\n  text-wrap: nowrap;\n}\n\n/* Stop Button Style */\n.stop-button {\n  background-color: #cbec65 !important;\n}\n\n.loot-panel-container {\n  margin-top: 20px;\n  width: 100%;\n  max-width: 600px;\n}\n\n/* Position the sort button inside the loot window */\n.loot-results,\n.all-loot {\n  position: relative; /* To position the sort button inside */\n}\n\n.loot-results {\n  background-color: #3e362f;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-bottom: 20px;\n  width: 100%;\n  max-width: 600px;\n  border-radius: 8px;\n}\n\n/* No border when no loot is present */\n.no-border {\n  border: 1px solid transparent;\n}\n\n/* White border for normal loot */\n.white-border {\n  border: 1px solid white;\n}\n\n.coll-log-border {\n  border: 1px solid white;\n  box-shadow: 0 0 25px #ffd9008a;\n}\n\n/* Purple glowing border for unique loot */\n.purple-border {\n  border: 1px solid #b950ff;\n  box-shadow: 0 0 25px #b950ff;\n}\n\n.all-loot {\n  background-color: #3e362f;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 16px;\n  padding-right: 16px;\n  border: none;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  width: 100%;\n  max-width: 600px;\n}\n\n.collection-log {\n  background-color: #3e362f;\n  padding-top: 14px;\n  padding-bottom: 14px;\n  padding-left: 16px;\n  padding-right: 16px;\n  border: none;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  width: 100%;\n  max-width: 600px;\n}\n\n.toggle-extra-info {\n  background-color: #26262f; /* Grey background */\n  border: none;\n  cursor: pointer;\n  color: #ffffff; /* White icon for contrast */\n  padding: 0; /* Remove default padding */\n  border-radius: 50%; /* Make it circular */\n  width: 30px; /* Set width and height to make it a circle */\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 0px !important;\n}\n\n.toggle-extra-info:focus {\n  outline: none;\n}\n\n.extra-info {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center; /* Center the badges */\n  gap: 8px; /* Space between items */\n  text-align: center;\n  font-size: 12px;\n  padding: 10px; /* Padding inside the panel */\n  border-radius: 8px; /* Rounded corners */\n  width: 30%;\n  max-width: 30%;\n}\n\n/* Extra Info Panel - Hidden State */\n.extra-info.hidden {\n  visibility: hidden;\n  height: 0;\n  overflow: hidden;\n  transition: height 0.3s ease;\n  margin-bottom: 0px;\n  padding: 0px;\n}\n\n/* Extra Info Panel - Visible State */\n.extra-info.visible {\n  visibility: visible;\n  height: auto;\n  transition: height 0.3s ease;\n}\n\n.extra-info span,\n.extra-info label {\n  background-color: #26262f; /* Lighter gray background for each item */\n  padding: 0 10px; /* Horizontal padding */\n  border-radius: 5px; /* Rounded corners */\n  color: rgb(209, 209, 209);\n  display: inline-flex; /* Use inline-flex for alignment without affecting width */\n  align-items: center; /* Center content vertically */\n  justify-content: center; /* Center content horizontally */\n  height: 35px; /* Set a consistent height */\n  white-space: nowrap; /* Prevent text from wrapping */\n  font-size: 14px; /* Consistent font size */\n  /* Remove width settings */\n}\n\n@media (max-width: 1200px) {\n  .extra-info {\n    gap: 10px;\n    width: 80%;\n    max-width: 80%;\n  }\n}\n\n@media (max-width: 600px) {\n  .extra-info {\n    gap: 10px;\n    width: 100%;\n    max-width: 100%;\n  }\n}\n\n/* .extra-info {\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  margin-bottom: 10px;\n  text-align: center;\n  font-size: 12px;\n} */\n\nh2 {\n  margin-bottom: 15px;\n  text-align: center; /* Center all h2 elements */\n  font-size: 22px;\n}\n\n.title-text {\n  color: #98c21c;\n  text-align: center; /* Center the text */\n}\n\n.subtitle-text {\n  color: #a1a1a1a4;\n  font-size: 16px;\n}\n\n.loot-grid {\n  display: grid;\n  grid-gap: 8px; /* Adds space between items */\n  grid-template-columns: repeat(\n    auto-fill,\n    minmax(45px, 1fr)\n  ); /* Dynamically fit as many 45px-wide items as possible */\n}\n\n.loot-item {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  aspect-ratio: 1 / 1; /* Ensures the item keeps a square aspect ratio */\n}\n/* Reset anchor styles in loot items */\n.loot-item a {\n  color: inherit;\n  text-decoration: none;\n}\n\n.loot-item a:visited,\n.loot-item a:hover,\n.loot-item a:active {\n  color: inherit;\n  text-decoration: none;\n}\n\n.loot-item a:focus {\n  outline: none;\n}\n\n.loot-image {\n  object-fit: contain;\n  border: none;\n  background: transparent;\n}\n\n@font-face {\n  font-family: \"runescape\";\n  src: url(\"@/assets/fonts/runescape.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"runescape_bold\";\n  src: url(\"@/assets/fonts/runescape_bold.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"runescape_bold_2\";\n  src: url(\"@/assets/fonts/runescape_bold_2.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n@font-face {\n  font-family: \"runescape_compact\";\n  src: url(\"@/assets/fonts/runescape_compact.ttf\") format(\"truetype\");\n  font-weight: normal;\n  font-style: normal;\n}\n\n.quantity-text {\n  position: absolute;\n  top: 0px;\n  left: 15%;\n  font-family: \"runescape\";\n  font-size: 14px;\n  color: #fff200;\n  text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n    1px 1px 0 #000;\n}\n\n.custom-tooltip {\n  position: absolute;\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 5px;\n  white-space: nowrap;\n  z-index: 100;\n  font-size: 12px;\n  display: none; /* Hidden by default */\n}\n\n.underlined {\n  text-decoration: underline;\n  cursor: help;\n  text-decoration-color: #cccccc;\n}\n\n.loot-item a {\n  cursor: pointer;\n}\n\n.quantity-text.yellow {\n  color: #fff200; /* Default yellow color */\n}\n\n.quantity-text.white {\n  color: #ffffff; /* White color for 'k' values */\n}\n\n.quantity-text.green {\n  color: #00ff00; /* Green color for 'm' values */\n}\n\na,\n::selection,\n::after,\n::before {\n  background-color: transparent !important;\n  text-decoration: none !important;\n}\n\n/* Choose Items Container */\n.choose-items-container {\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 20px;\n  margin-top: -10px;\n}\n\n/* Label for the Container */\n.choose-items-container > label {\n  font-weight: bold;\n}\n\n/* Checkboxes Container */\n.checkboxes {\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start; /* Start alignment to avoid center alignment */\n  align-items: center; /* Centers the container in its parent */\n  width: 100%; /* Ensure it takes full width */\n  margin-top: 1rem;\n}\n\n/* Individual Checkbox Item */\n.checkbox-item {\n  margin-bottom: 5px;\n  width: 100%; /* Ensures the checkbox item takes full width of container */\n  max-width: 275px; /* You can set a max width to keep it from stretching too wide */\n}\n\n/* Label for Checkbox */\n.checkbox-item label {\n  display: flex;\n  align-items: center;\n  justify-content: center; /* Centers the text inside the label */\n  position: relative;\n  width: 100%;\n}\n\n/* Checkbox Input (Aligned to the left) */\n.checkbox-item label input {\n  position: absolute;\n  left: 0; /* Keep the checkbox aligned to the left */\n  margin-right: 10px; /* Adds spacing between checkbox and text */\n}\n\n.greyed-out {\n  color: rgb(196, 255, 187);\n}\n\nselect {\n  margin-bottom: 0px !important;\n}\n\ninput {\n  margin-bottom: 0px !important;\n}\n\ndetails {\n  border: none !important;\n}\n\nsummary::after,\nsummary:focus,\nsummary:active {\n  background-image: none !important;\n  width: initial !important;\n  outline: none;\n  box-shadow: none;\n  margin-inline-start: 0px !important;\n}\n\nli {\n  list-style-type: none !important;\n}\n\n.sort-dropdown {\n  position: absolute;\n  top: 8px;\n  right: 8px;\n  z-index: 999;\n  box-sizing: content-box;\n}\n\n.fa-sort {\n  font-size: 14px !important;\n}\n\n.sort-dropdown summary {\n  background: none;\n  border: none;\n  padding: 0;\n  margin: 0;\n  cursor: pointer;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n.sort-dropdown summary::-webkit-details-marker {\n  display: none; /* Remove the default dropdown arrow */\n}\n\n.sort-dropdown summary i {\n  font-size: 18px;\n  color: rgb(161, 161, 161); /* Adjust icon color */\n}\n\n/* Dropdown menu styling */\n.sort-dropdown ul {\n  background-color: #11191f; /* Darker background color */\n  color: rgb(187, 198, 206); /* White text */\n  padding: 8px 0; /* Add some padding around the list */\n  list-style: none; /* Remove bullet points */\n  min-width: 150px; /* Ensure the dropdown has a minimum width */\n  position: absolute;\n  top: 30px;\n  right: 0;\n  z-index: 10;\n  font-size: 16px; /* Reduce font size */\n  border-radius: 4px; /* Rounded corners */\n  white-space: nowrap; /* Prevent text wrapping */\n  outline-style: solid;\n  outline-width: 1px;\n  outline-color: rgb(97, 97, 97);\n}\n\n/* Dropdown list item styling */\n.sort-dropdown ul li {\n  margin: none;\n  padding-top: 2px;\n  padding-bottom: 2px;\n  padding-left: 10px;\n  padding-right: 10px;\n}\n\n.sort-dropdown ul li label {\n  margin-bottom: 0px !important;\n}\n\n/* Hover effect for dropdown items */\n.sort-dropdown ul li:hover {\n  color: white;\n  background-color: #52525e; /* Slightly lighter background on hover */\n}\n\n/* Radio button styles within dropdown */\n.sort-dropdown input[type=\"radio\"] {\n  margin-right: 2px;\n  accent-color: white; /* Ensure the radio button matches the color scheme */\n}\n\n.sort-dropdown label {\n  cursor: pointer;\n}\n\n/* Tooltip styling remains unchanged */\n.custom-tooltip {\n  position: absolute;\n  background-color: #333;\n  color: #fff;\n  padding: 5px;\n  border-radius: 5px;\n  white-space: nowrap;\n  z-index: 100;\n  font-size: 12px;\n  display: none; /* Hidden by default */\n}\n\n.obtained-item {\n  opacity: 1;\n}\n\n.not-obtained-item {\n  opacity: 0.35; /* Make uncollected items semi-transparent */\n}\n\n.switch-simulator {\n  display: flex;\n  flex-direction: row;\n  justify-content: end;\n  align-items: center;\n  text-decoration: none;\n  position: absolute;\n  right: 15px;\n  top: 15px;\n  text-align: center;\n  color: rgb(255, 255, 255);\n  opacity: 50%;\n  font-family: \"runescape\";\n  font-size: 18px;\n  transition: opacity 0.5s;\n}\n\n.switch-simulator span {\n  height: 100%;\n}\n\n.switch-simulator:visited,\n.switch-simulator::after {\n  text-decoration: none;\n  color: rgb(255, 255, 255);\n}\n\n.switch-simulator:hover {\n  opacity: 100%;\n}\n\n/* Adjust button styles for mobile devices */\n@media (max-width: 800px) {\n  .checkbox-item {\n    max-width: 250px; /* You can set a max width to keep it from stretching too wide */\n  }\n\n  .checkbox-item label {\n    font-size: 15px;\n  }\n\n  .loot-grid {\n    grid-template-columns: repeat(\n      auto-fill,\n      minmax(40px, 1fr)\n    ); /* Dynamically fit as many 45px-wide items as possible */\n\n    grid-gap: 10px; /* Adds space between items */\n  }\n\n  .quantity-text {\n    left: 10%;\n  }\n\n  .main-container {\n    width: 95%;\n  }\n\n  .parameters {\n    border-radius: 8px;\n    width: 100%;\n    max-width: 100%;\n  }\n\n  .parameter-generation {\n    margin-left: auto;\n    margin-right: auto;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 80%;\n  }\n\n  .parameter-generation button {\n    width: 75%;\n    max-width: none;\n  }\n\n  .parameters button {\n    margin-left: 0px;\n    margin-right: 0px;\n  }\n\n  .app-wrapper {\n    margin-left: 25px;\n    margin-right: 25px;\n  }\n\n  .parameter-controls {\n    margin-bottom: 20px;\n  }\n\n  .custom-tooltip {\n    display: none !important; /* Hidden by default */\n    visibility: hidden !important;\n    cursor: default !important;\n  }\n\n  .underlined {\n    text-decoration: none !important;\n    cursor: default !important;\n    text-decoration-color: transparent !important;\n  }\n}\n\n@media (max-width: 350px) {\n  .checkbox-item {\n    max-width: 225px; /* You can set a max width to keep it from stretching too wide */\n  }\n\n  .checkbox-item label {\n    font-size: 12px !important;\n  }\n}\n</style>\n","class LootResult {\n  constructor(itemName, quantity, itemValue, imageUrl, url, type) {\n    this.itemName = itemName;\n    this.quantity = quantity;\n    this.itemValue = itemValue;\n    this.imageUrl = imageUrl;\n    this.url = url;\n    this.type = type; // Can be \"normal\", \"unique\", or \"tertiary\"\n  }\n}\n\nclass NormalLootItem {\n  constructor(\n    itemName,\n    divisor,\n    itemValue,\n    urlOverride = null,\n    imageUrlOverride = null\n  ) {\n    this.itemName = itemName;\n    this.divisor = divisor;\n    this.itemValue = itemValue;\n    this.quantity = 0;\n    this.url = urlOverride || this.generateUrl(itemName);\n    this.imageUrl = imageUrlOverride || this.generateImageUrl(itemName);\n  }\n\n  generateUrl(itemName) {\n    return `https://oldschool.runescape.wiki/w/${itemName.replace(/\\s/g, \"_\")}`;\n  }\n\n  generateImageUrl(itemName) {\n    return `images/${itemName.replace(/\\s/g, \"_\")}.png`;\n  }\n}\n\nclass UniqueLootItem {\n  constructor(\n    itemName,\n    weight,\n    itemValue,\n    urlOverride = null,\n    imageUrlOverride = null\n  ) {\n    this.itemName = itemName;\n    this.weight = weight;\n    this.itemValue = itemValue;\n    this.chance = 0;\n    this.url = urlOverride || this.generateUrl(itemName);\n    this.imageUrl = imageUrlOverride || this.generateImageUrl(itemName);\n  }\n\n  generateUrl(itemName) {\n    return `https://oldschool.runescape.wiki/w/${itemName.replace(/\\s/g, \"_\")}`;\n  }\n\n  generateImageUrl(itemName) {\n    return `images/${itemName.replace(/\\s/g, \"_\")}.png`;\n  }\n}\n\nclass LootSimulator {\n  constructor(personalPoints, challengeMode, hasAncientTablet, variance) {\n    this.personalPoints = personalPoints;\n    this.challengeMode = challengeMode;\n    this.hasAncientTablet = hasAncientTablet;\n    this.variance = variance;\n    this.rng = Math.random;\n    this.maxRoll = 570_000 * (1 / 8675);\n\n    // Initialize loot and entities\n    this.normalLootItems = this.initializeNormalLootItems();\n    this.uniqueLootItems = this.initializeUniqueLootItems();\n  }\n\n  initializeNormalLootItems() {\n    return [\n      new NormalLootItem(\"Death rune\", 36, 190),\n      new NormalLootItem(\"Blood rune\", 32, 279),\n      new NormalLootItem(\"Soul rune\", 20, 176),\n      new NormalLootItem(\"Rune arrow\", 14, 67),\n      new NormalLootItem(\"Dragon arrow\", 202, 1456),\n      new NormalLootItem(\"Grimy toadflax\", 525, 2863),\n      new NormalLootItem(\"Grimy ranarr weed\", 800, 7097),\n      new NormalLootItem(\"Grimy irit leaf\", 162, 1560),\n      new NormalLootItem(\"Grimy avantoe\", 234, 3803),\n      new NormalLootItem(\"Grimy kwuarm\", 378, 3881),\n      new NormalLootItem(\"Grimy snapdragon\", 1348, 8703),\n      new NormalLootItem(\"Grimy cadantine\", 358, 3666),\n      new NormalLootItem(\"Grimy lantadyme\", 249, 1586),\n      new NormalLootItem(\"Grimy dwarf weed\", 201, 2553),\n      new NormalLootItem(\"Grimy torstol\", 824, 4241),\n      new NormalLootItem(\"Silver ore\", 20, 74),\n      new NormalLootItem(\"Coal\", 20, 131),\n      new NormalLootItem(\"Gold ore\", 44, 176),\n      new NormalLootItem(\"Mithril ore\", 32, 164),\n      new NormalLootItem(\"Adamantite ore\", 167, 823),\n      new NormalLootItem(\"Runite ore\", 2093, 10902),\n      new NormalLootItem(\"Uncut sapphire\", 189, 233),\n      new NormalLootItem(\"Uncut emerald\", 142, 489),\n      new NormalLootItem(\"Uncut ruby\", 250, 1004),\n      new NormalLootItem(\"Uncut diamond\", 514, 2281),\n      new NormalLootItem(\"Lizardman fang\", 28, 15),\n      new NormalLootItem(\"Pure essence\", 2, 1),\n      new NormalLootItem(\"Saltpetre\", 24, 8),\n      new NormalLootItem(\"Teak plank\", 100, 1013),\n      new NormalLootItem(\"Mahogany plank\", 240, 2304),\n      new NormalLootItem(\"Dynamite\", 54, 591),\n      new NormalLootItem(\"Torn prayer scroll\", 999999, 46957),\n      new NormalLootItem(\"Dark relic\", 999999, 0),\n    ];\n  }\n\n  initializeUniqueLootItems() {\n    // 69 total\n    return [\n      new UniqueLootItem(\"Dexterous prayer scroll\", 20, 17482665),\n      new UniqueLootItem(\"Arcane prayer scroll\", 20, 2105945),\n      new UniqueLootItem(\"Twisted buckler\", 4, 20201013),\n      new UniqueLootItem(\"Dragon hunter crossbow\", 4, 86813578),\n      new UniqueLootItem(\"Dinh's bulwark\", 3, 24496500),\n      new UniqueLootItem(\"Ancestral hat\", 3, 48805248),\n      new UniqueLootItem(\"Ancestral robe top\", 3, 158772884),\n      new UniqueLootItem(\"Ancestral robe bottom\", 3, 118323336),\n      new UniqueLootItem(\"Dragon claws\", 3, 79699447),\n      new UniqueLootItem(\"Elder maul\", 2, 133145759),\n      new UniqueLootItem(\"Kodai insignia\", 2, 117585355),\n      new UniqueLootItem(\"Twisted bow\", 2, 1685595577),\n    ];\n  }\n\n  simulateLootRoll(ancientTabletObtained) {\n    this.ancientTabletObtained = ancientTabletObtained;\n\n    const totalPoints = Math.max(this.calculateTotalPoints(), 0);\n    const rewardPool = this.getUniqueRewardPool(totalPoints);\n\n    let lootResults = [];\n    let purpleObtained = false;\n\n    for (let i = 0; i < rewardPool.uniqueChances.length; i++) {\n      if (this.rng() >= rewardPool.uniqueChances[i]) continue;\n\n      const roll = this.rng();\n      let cumulativeChance = 0.0;\n\n      for (let loot of rewardPool.uniqueLootPool) {\n        cumulativeChance += loot.chance;\n        if (roll < cumulativeChance) {\n          // Unique item obtained\n          lootResults.push(\n            new LootResult(\n              loot.item.itemName,\n              1,\n              loot.item.itemValue,\n              loot.item.imageUrl,\n              loot.item.url,\n              \"unique\"\n            )\n          );\n          purpleObtained = true;\n          break;\n        }\n      }\n    }\n\n    // Simulate Purple (Unique) Drop\n    if (!purpleObtained) {\n      // Clone the pool of normal loot items\n      let availableLootItems = [...this.normalLootItems];\n\n      // Roll for common loot (2 items)\n      for (let i = 0; i < 2; i++) {\n        // Roll for ancient tablet if not obtained\n        if (!this.hasAncientTablet) {\n          const ancientTabletRate = 1 / 10;\n          const ancientTabletRoll = this.rng();\n          if (ancientTabletRoll < ancientTabletRate) {\n            lootResults.push(\n              new LootResult(\n                \"Ancient tablet\",\n                1,\n                0,\n                this.generateImageUrl(\"Ancient tablet\"),\n                this.generateUrl(\"Ancient tablet\"),\n                \"normal\"\n              )\n            );\n\n            ancientTabletObtained = true;\n            this.hasAncientTablet = true;\n\n            continue;\n          }\n        }\n\n        // Randomly pick an item from the available loot pool\n        const index = Math.floor(this.rng() * availableLootItems.length);\n        const lootItem = availableLootItems[index];\n\n        // Add the selected item to the loot results\n        lootResults.push(\n          new LootResult(\n            lootItem.itemName,\n            this.calculateLootQuantity(totalPoints, lootItem.divisor),\n            lootItem.itemValue,\n            lootItem.imageUrl,\n            lootItem.url,\n            \"normal\"\n          )\n        );\n\n        // Remove the selected item from the available loot pool to prevent duplicates\n        availableLootItems.splice(index, 1);\n      }\n    }\n\n    // Simulate rare onyx drop\n    const onyxRate = 1 / 70;\n    const onyxRateRoll = this.rng();\n    if (onyxRateRoll < onyxRate) {\n      lootResults.push(\n        new LootResult(\n          \"Onyx\",\n          1,\n          2912298,\n          this.generateImageUrl(\"Onyx\"),\n          this.generateUrl(\"Onyx\"),\n          \"normal\"\n        )\n      );\n    }\n\n    // Simulate Tertiary Drops\n    const tertiaryDrops = this.simulateTertiaryDrops(purpleObtained);\n    lootResults = lootResults.concat(tertiaryDrops);\n\n    return {\n      lootResults: lootResults,\n      totalPoints: totalPoints,\n      ancientTabletObtained: ancientTabletObtained,\n    };\n  }\n\n  simulateTertiaryDrops(receievedPurple) {\n    let newLoot = [];\n\n    if (this.challengeMode) {\n      const dustDropRate = 1 / 400;\n      const dustRoll = this.rng();\n      if (dustRoll < dustDropRate)\n        newLoot.push(\n          new LootResult(\n            \"Metamorphic dust\",\n            1,\n            0,\n            this.generateImageUrl(\"Metamorphic dust\"),\n            this.generateUrl(\"Metamorphic dust\"),\n            \"tertiary\"\n          )\n        );\n\n      const twistedKitRate = 1 / 75;\n      const twistedKitRoll = this.rng();\n      if (twistedKitRoll < twistedKitRate) {\n        newLoot.push(\n          new LootResult(\n            \"Twisted ancestral colour kit\",\n            1,\n            0,\n            this.generateImageUrl(\"Twisted ancestral colour kit\"),\n            this.generateUrl(\"Twisted ancestral colour kit\"),\n            \"tertiary\"\n          )\n        );\n      }\n    }\n\n    if (receievedPurple) {\n      const petDropRate = 1 / 53;\n      const petRoll = this.rng();\n      if (petRoll < petDropRate) {\n        newLoot.push(\n          new LootResult(\n            \"Olmlet\",\n            1,\n            0,\n            this.generateImageUrl(\"Olmlet\"),\n            this.generateUrl(\"Olmlet\"),\n            \"tertiary\"\n          )\n        );\n      }\n    } else {\n      // 3. Clue Scroll (elite)\n      const clueDropRate = 1 / 12;\n      const clueRoll = this.rng();\n      if (clueRoll < clueDropRate) {\n        newLoot.push(\n          new LootResult(\n            \"Clue scroll (elite)\",\n            1,\n            0,\n            this.generateImageUrl(\"Clue scroll (elite)\"),\n            this.generateUrl(\"Clue scroll (elite)\"),\n            \"tertiary\"\n          )\n        );\n      }\n    }\n\n    return newLoot;\n  }\n\n  calculateTotalPoints() {\n    return this.variance == 0\n      ? this.personalPoints\n      : this.applyVariance(this.personalPoints, this.variance);\n  }\n\n  applyVariance(baseValue, variancePercentage) {\n    const varianceAmount = baseValue * (variancePercentage / 100);\n    const min = Math.floor(baseValue - varianceAmount);\n    const max = Math.ceil(baseValue + varianceAmount);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  getUniqueRewardPool(totalPoints) {\n    const uniqueChances =\n      this.determineUniqueChancesFromTotalPoints(totalPoints);\n\n    const uniqueLootPool = [];\n\n    for (let item of this.uniqueLootItems) {\n      let rate = item.weight / 69;\n      uniqueLootPool.push({\n        item: item,\n        chance: rate,\n      });\n    }\n\n    return {\n      uniqueChances: uniqueChances,\n      uniqueLootPool: uniqueLootPool,\n    };\n  }\n\n  // Determine personal unique loot chances based on total team points\n  determineUniqueChancesFromTotalPoints(totalPoints) {\n    const chances = [];\n    let totalChancePercentage = totalPoints * (1 / 8675);\n\n    for (let i = 0; i < 3; i++) {\n      if (totalChancePercentage > this.maxRoll) {\n        chances.push(this.maxRoll / 100); // Cap chance for each roll\n        totalChancePercentage -= this.maxRoll;\n      } else {\n        chances.push(totalChancePercentage / 100);\n        break;\n      }\n    }\n    return chances;\n  }\n\n  calculateLootQuantity(personalPoints, divisor) {\n    if (divisor == 999999) return 1;\n    let quantity = Math.floor(personalPoints / divisor);\n    return Math.max(quantity, 1);\n  }\n\n  calculatePointsWithMaxVariance(subtract = false) {\n    let totalPoints = this.personalPoints;\n    totalPoints = this.applyMaxVariance(totalPoints, subtract);\n    return totalPoints;\n  }\n\n  // Apply maximum variance (either subtract or add variance)\n  applyMaxVariance(baseValue, subtract) {\n    const varianceAmount = baseValue * (this.variance / 100);\n    if (subtract) {\n      return Math.floor(baseValue - varianceAmount); // Subtract variance for the lower bound\n    }\n    return Math.ceil(baseValue + varianceAmount); // Add variance for the upper bound\n  }\n\n  // Method to get the expected purple range using max variance for min and max points\n  getExpectedPurpleRange() {\n    // Calculate points with variance subtracted (min points)\n    const minPoints = Math.max(this.calculatePointsWithMaxVariance(true), 0);\n\n    // Calculate points with variance added (max points)\n    const maxPoints = this.calculatePointsWithMaxVariance(false);\n\n    // Get purple chance for min and max points\n    const rewardPoolMin = this.getUniqueRewardPool(minPoints);\n    const rewardPoolMax = this.getUniqueRewardPool(maxPoints);\n\n    // Calculate cumulative purple chance for min points\n    let purpleChanceMin = 1;\n    for (const chance of rewardPoolMin.uniqueChances) {\n      purpleChanceMin *= 1 - chance; // Multiply the probabilities of NOT getting a purple\n    }\n\n    // Calculate cumulative purple chance for max points\n    let purpleChanceMax = 1;\n    for (const chance of rewardPoolMax.uniqueChances) {\n      purpleChanceMax *= 1 - chance; // Multiply the probabilities of NOT getting a purple\n    }\n\n    // Convert the result to the probability of getting at least one purple\n    return {\n      min: (1 - purpleChanceMin) * 100, // Convert to percentage\n      max: (1 - purpleChanceMax) * 100, // Convert to percentage\n    };\n  }\n\n  generateUrl(itemName) {\n    return `https://oldschool.runescape.wiki/w/${itemName.replace(/\\s/g, \"_\")}`;\n  }\n\n  generateImageUrl(itemName) {\n    return `images/${itemName.replace(/\\s/g, \"_\")}.png`;\n  }\n}\n\nexport default LootSimulator;\n","import { render } from \"./App.vue?vue&type=template&id=bc791f8e\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=bc791f8e&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\n\ncreateApp(App).mount('#app')\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcox_loot_simulator\"] = self[\"webpackChunkcox_loot_simulator\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(160); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","id","href","xmlns","height","viewBox","width","fill","d","_hoisted_2","_hoisted_3","_hoisted_4","_createTextVNode","type","_cache","$event","$data","personalPoints","min","max","style","number","challengeMode","value","variance","numberOfRolls","_hoisted_5","autoRollInterval","autoRollStopCondition","_createStaticVNode","_hoisted_6","_hoisted_7","_Fragment","_renderList","allCollLogItemsList","item","_normalizeClass","collectionLog","selectedItems","_hoisted_8","_toDisplayString","_createCommentVNode","_hoisted_9","_hoisted_10","$options","formatPurpleRate","expectedPurpleRange","_hoisted_11","toFixed","_hoisted_12","onClick","args","simulateLoot","autoRolling","stopAutoRoll","startAutoRoll","disabled","canStartAutoRoll","_hoisted_13","resetLoot","_hoisted_14","toggleExtraInfo","showExtraInfo","_hoisted_15","expectedPurplePercent","actualPurplePercent","totalPurples","dupesCount","dryStreak","_hoisted_16","drynessPercent","longestDryStreak","worstDryness","formatTotalGP","totalLootValue","_hoisted_17","logsComplete","totalLogs","greenLoggedKc","_hoisted_18","_hoisted_19","lastRolls","currentLoot","length","showHasPurpleBorder","showNewCollectionLogBorder","ref","handleClickInside","role","name","onChange","setSortOption","checked","currentSortOption","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","sortedCurrentLoot","index","itemName","url","target","src","imageUrl","alt","onMouseenter","isTrackedKCItem","showTooltip","getUniqueItemKC","onMousemove","moveTooltip","onMouseleave","hideTooltip","_hoisted_26","quantity","formatQuantity","colorClass","formattedQuantity","_hoisted_25","_hoisted_27","_hoisted_28","totalRollsDelayed","_hoisted_29","allSortOption","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","allLoot","_hoisted_34","sortedAllLoot","_hoisted_36","_hoisted_35","_hoisted_37","_hoisted_38","_normalizeStyle","logsCompleteDelayed","_hoisted_39","_hoisted_40","isItemObtained","getItemUrl","getItemImage","getUniqueItemKCByName","_hoisted_42","getItemQuantity","_hoisted_41","_hoisted_43","LootResult","constructor","itemValue","this","NormalLootItem","divisor","urlOverride","imageUrlOverride","generateUrl","generateImageUrl","replace","UniqueLootItem","weight","chance","LootSimulator","hasAncientTablet","rng","Math","random","maxRoll","normalLootItems","initializeNormalLootItems","uniqueLootItems","initializeUniqueLootItems","simulateLootRoll","ancientTabletObtained","totalPoints","calculateTotalPoints","rewardPool","getUniqueRewardPool","lootResults","purpleObtained","i","uniqueChances","roll","cumulativeChance","loot","uniqueLootPool","push","availableLootItems","ancientTabletRate","ancientTabletRoll","floor","lootItem","calculateLootQuantity","splice","onyxRate","onyxRateRoll","tertiaryDrops","simulateTertiaryDrops","concat","receievedPurple","newLoot","dustDropRate","dustRoll","twistedKitRate","twistedKitRoll","petDropRate","petRoll","clueDropRate","clueRoll","applyVariance","baseValue","variancePercentage","varianceAmount","ceil","determineUniqueChancesFromTotalPoints","rate","chances","totalChancePercentage","calculatePointsWithMaxVariance","subtract","applyMaxVariance","getExpectedPurpleRange","minPoints","maxPoints","rewardPoolMin","rewardPoolMax","purpleChanceMin","purpleChanceMax","data","pathInvocation","totalRolls","rollExecuted","hasPurple","newCollectionLog","lootSimulator","rollHistory","stopOnPurple","autoRollTimer","itemKCs","currentitemKCs","petObtained","uniqueItemsList","tertiaryItemsList","sortOptions","current","all","acquiredDates","activeDropdown","imageCache","Set","imageCacheRefs","totalPurpleChanceSum","imageList","computed","range","isOneTimeAutoRollStopConditionMet","sortLoot","reduce","total","created","savedCurrentSortOption","localStorage","getItem","savedAllSortOption","applySorting","savedParameters","params","JSON","parse","undefined","parseInt","initializeLootSimulator","watch","validateMinMax","saveParameters","refreshLootSimulator","handler","newVal","deep","mounted","preloadImages","setTimeout","tooltip","document","getElementById","tooltipElements","querySelectorAll","forEach","element","tooltipContent","getAttribute","addEventListener","textContent","display","event","left","pageX","top","pageY","handleClickOutside","beforeUnmount","removeEventListener","methods","field","some","find","itemObject","image","img","Image","preloadLootImages","lootItems","Promise","resolve","loadedCount","uncachedImages","filter","has","totalUncached","onload","onerror","add","lootType","currentDropdown","$refs","currentSortDropdown","allDropdown","allSortDropdown","contains","removeAttribute","sortOption","setItem","sort","a","b","dateA","acquiredDate","dateB","toString","formattedValue","parameters","stringify","highlightCurrentKCs","maxKCShown","allKCs","kcList","firstKC","currentKCs","currentKCsSet","map","Number","lastKCs","slice","kc","kcNum","join","isSimulating","combinedCurrentRolls","startingTotalRolls","currentPurpleChanceSum","raidLevel","entryModeCount","normalModeCount","expertModeCount","currentKC","currentTimestamp","Date","now","result","purpleChance","rewardP","probabilityOfOneOrMoreDrops","pow","foundPurple","calculateOverallDrynessPercent","parseFloat","updateCollectionLog","Object","values","mergeLootResults","recheckAutoCondition","calculateDupes","selectedItem","totalDupes","cumulativeDrynessProbability","probabilityOfZeroDrops","newItem","findIndex","existingItem","updatedItem","keys","autoRollWithDynamicInterval","startTime","autoRollSimulate","endTime","elapsedTime","remainingTime","isAllUniquesObtained","areAllSelectedItemsObtained","every","console","log","__exports__","render","createApp","App","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","r","n","getter","__esModule","definition","o","defineProperty","enumerable","get","g","globalThis","Function","e","window","obj","prop","prototype","hasOwnProperty","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}